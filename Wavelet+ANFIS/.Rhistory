load('/Users/andyliu/freeagents.csv')
data = read.table('/Users/andyliu/freeagents.csv')
data = read.csv('Users/andyliu/freeagents.csv')
data = read.csv('/Users/andyliu/freeagents.csv')
library(ggplot2)
install.packages('ggplot2')
ggplot(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
install.packages('tidyverse')
install.packages('rlang')
install.packages('tidyverse')
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
libraries.install('rlang')
install.packages('rlang')
install.packages('ggplot2')
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
library(ggplot2)
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
data$pc ,_ predict(prcomp(~Poscomms+Comms,d))[,1]
data$pc <- predict(prcomp(~Poscomms+Comms,d))[,1]
data$pc <- predict(prcomp(~Poscomms+Comms,data))[,1]
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
data$density <- fields::interp.surface(MASS::kde2d(data$Comms, data$Poscomms), data[,c("Comms", "Poscomms")])
install.package('fields')
install.packages('fields')
library(fields)
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
data$density <- fields::interp.surface(MASS::kde2d(data$Comms, data$Poscomms), data[,c("Comms", "Poscomms")])
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
sp + scale_x_continuous(trans='log2')
install.packages('ggrepel')
library(ggrepel)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, label = Name color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel()
sp <- ggplot(data, aes(Comms, Poscomms, label = Name, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel()
sp <- ggplot(data, aes(Comms, Poscomms, label = Name, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_label_repel(arrow = arrow(length = unit(0.03, "npc"), type = "closed", ends = "first"),
force = 5,
xlim  = x_limits)
sp <- ggplot(data, aes(Comms, Poscomms, label = Name, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_label_repel(arrow = arrow(length = unit(0.03, "npc"), type = "closed", ends = "first"))
transportation <- c()
setwd("/Users/andyliu/develop/andy/Wavelet+ANFIS")
train_x <- read.csv(file = 'x_train.csv')
test_x <- read.csv(file = 'x_test.csv')
train_y <- read.csv(file = 'y_train.csv')
test_y <- read.csv(file = 'y_test.csv')
test_x <- test_x[-c(1)]
train_y <- train_y[-c(1)]
test_y <- test_y[-c(1)]
train_x <- train_x[-c(1)]
train <- cbind(train_x, train_y)
NL <- matrix(c(2,2,2,2,2,2,2,2,2,2,2,2,2))
Control <- list(num.labels = NL, max.iter = 10, step.size = 0.01, type.tnorm = 'PRODUCT', type.snorm = 'MAX', type.implication.func = 'MIN', name = 'APPLE')
library(frbs)
RD <- matrix(c(0,0,0,0,0,0,0,0,0,0,0,0,0),c(1,1,1,1,1,1,1,1,1,1,1,1,1))
obj <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control=Control)
RD <- matrix(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,nrows=2, ncols=13)
RD <- matrix(c(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1),nrows=2, ncols=13)
RD <- matrix(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,nrow=2, ncol=13)
RD <- matrix(c(0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1),nrow=2, ncol=13)
RD
obj <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control=Control)
warnings()
View(test_x)
RD
obj <- frbs.learn(data.train=train, method.type=c('ANFIS'), control=Control)
warnings()
isNumeric(train)
Control <- list(num.labels = NL, max.iter = 10, step.size = 0.01, type.tnorm = 'PRODUCT', type.implication.func = 'MIN', name = 'APPLE')
obj <- frbs.learn(data.train=train, method.type=c('ANFIS'), control=Control)
warnings()
Control <- list(num.labels = NL, max.iter = 10, step.size = 0.01, type.tnorm =
4, type.snorm = 1, type.implication.func = "MIN", name = "APPLE")
obj <- frbs.learn(data.train=train, method.type=c('ANFIS'), control=Control)
num.labels
NL
NL <- reshape(NL, 1, 13)
NL <- matrix(c(2,2,2,2,2,2,2,2,2,2,2,2,2), nrows=1, ncols=13)
NL <- matrix(c(2,2,2,2,2,2,2,2,2,2,2,2,2), nrow=1, ncol=13)
NL
Control <- list(num.labels = NL, max.iter = 10, step.size = 0.01, type.tnorm =
4, type.snorm = 1, type.implication.func = "MIN", name = "APPLE")
obj <- frbs.learn(data.train=train, method.type=c('ANFIS'), control=Control)
warnings()
Control <- list(num.labels = NL, max.iter = 10, step.size = 0.01, name = "APPLE")
obj <- frbs.learn(data.train=train, method.type=c('ANFIS'), control=Control)
Control <- list(max.iter = 10, step.size = 0.01, name = "APPLE")
obj <- frbs.learn(data.train=train, method.type=c('ANFIS'), control=Control)
Control <- list(max.iter = 10, step.size = 0.01, type.tnorm =
4, type.snorm = 1, type.implication.func = "MIN", name = "APPLE")
obj <- frbs.learn(data.train=train, method.type=c('ANFIS'), control=Control)
pred <- predict(obj, test_x)
pred
actual <- test_y
mse <- MSE(y_pred = pred, y_true = actual)
library(ggplot2)
install.packages('ggplot2')
library(ggplot2)
save.image("~/develop/andy/Wavelet+ANFIS/87progress.RData")
range <- range(1,1024)
range <- seq(1,1024,1)
g <- data.frame("index":range, "actual":actual, "pred":pred)
g <- data.frame("index"=range, "actual"=actual, "pred"=pred)
p = ggplot() +
geom_line(data = g, aes(x = "index", y = "Close"), color = "green") +
geom_line(data = g, aes(x = "index", y = "pred"), color = "red")
print(p)
install.packages('MLmetrics')
library(MLmetrics)
MSE(pred, actual)
MSE(g['pred'], g['Close'])
mean((g$Close - g$pred)^2)
mean((g$Close - g$pred))
mean(abs(g$Close - g$pred)/g$Close)
p = ggplot() + geom_line(data = g, aes(x = index, y = Close), color = "green") + geom_line(data = g, aes(x = index, y = pred), color = "red")
print(p)
newdata <- g[:200,]
newdata <- g[1:200,]
p = ggplot() + geom_line(data = newdata, aes(x = index, y = Close), color="green") + geom_line(data = newdata, aes(x = index, y = pred), color = "red")
print(p)
newdata <- g[1:150,]
p = ggplot() + geom_line(data = newdata, aes(x = index, y = Close), color="green") + geom_line(data = newdata, aes(x = index, y = pred), color = "red")
print(p)
mean((newdata$Close - newdata$pred)^2)
mean(abs(newdata$Close - newdata$pred)/newdata$Close)
save.image("~/develop/andy/Wavelet+ANFIS/87.RData")
