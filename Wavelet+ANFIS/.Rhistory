load('/Users/andyliu/freeagents.csv')
data = read.table('/Users/andyliu/freeagents.csv')
data = read.csv('Users/andyliu/freeagents.csv')
data = read.csv('/Users/andyliu/freeagents.csv')
library(ggplot2)
install.packages('ggplot2')
ggplot(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
install.packages('tidyverse')
install.packages('rlang')
install.packages('tidyverse')
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
libraries.install('rlang')
install.packages('rlang')
install.packages('ggplot2')
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
library(ggplot2)
ggplot2(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(poscomms, comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
data$pc ,_ predict(prcomp(~Poscomms+Comms,d))[,1]
data$pc <- predict(prcomp(~Poscomms+Comms,d))[,1]
data$pc <- predict(prcomp(~Poscomms+Comms,data))[,1]
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
data$density <- fields::interp.surface(MASS::kde2d(data$Comms, data$Poscomms), data[,c("Comms", "Poscomms")])
install.package('fields')
install.packages('fields')
library(fields)
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
data$density <- fields::interp.surface(MASS::kde2d(data$Comms, data$Poscomms), data[,c("Comms", "Poscomms")])
ggplot(data, aes(Poscomms, Comms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
sp + scale_x_continuous(trans='log2')
install.packages('ggrepel')
library(ggrepel)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel(aes(label=Name),hjust=0, vjust=0)
sp <- ggplot(data, aes(Comms, Poscomms, label = Name color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel()
sp <- ggplot(data, aes(Comms, Poscomms, label = Name, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_text_repel()
sp <- ggplot(data, aes(Comms, Poscomms, label = Name, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_label_repel(arrow = arrow(length = unit(0.03, "npc"), type = "closed", ends = "first"),
force = 5,
xlim  = x_limits)
sp <- ggplot(data, aes(Comms, Poscomms, label = Name, color = pc, alpha = 1/density)) +
geom_point(shape = 16, size = 5, show.legend = FALSE) +
theme_minimal() +
scale_color_gradient(low = "#32aeff", high = "#f2aeff") +
scale_alpha(range = c(.25, .6)) +geom_label_repel(arrow = arrow(length = unit(0.03, "npc"), type = "closed", ends = "first"))
transportation <- c()
setwd("~/develop/andy/Wavelet+ANFIS")
library(frbs)
xtest <- read.csv('./x_test_tata.csv')
ytest <- read.csv('./y_test_tata.csv')
xtrain <- read.csv('./x_train_tata.csv')
ytrain <- read.csv('./y_train_tata.csv')
xtest <- xtest[-1]
ytest <- ytest[-1]
xtrain <- xtrain[-1]
ytrain <- ytrain[-1]
train <- cbind(xtrain, ytrain)
zero_one <- matrix(0,1,nrow=2,ncol=1)
zero_one
zero_one <- matrix(data=(0,1),nrow=2,ncol=1)
zero_one <- matrix(data=(0 1),nrow=2,ncol=1)
zero_one <- matrix(data=c(0, 1),nrow=2,ncol=1)
rep.col<-function(x,n){
matrix(rep(x,each=n), ncol=n, byrow=TRUE)
}
zero_one <- rep.col(0:1, 13)
RD <- zero_one
RD
control <- list(max.iter=10, step.size=0.01, type.tnorm=4, type.snorm = 1, type.implication.func='MIN', name='STEEL')
obj <- frbs.learn(train, RD, c("ANFIS"), control)
warnings(_)
warnings()
obj <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control)
control
RD <- RD[-1]
control <- list(max.iter=10, step.size=0.01, type.tnorm=4, type.snorm = 1, type.implication.func='MIN', name='STEEL')
obj <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control)
RD <- zero_one
train <- train[3:]
train <- train[-(1:3)]
xtest <- read.csv('./x_test_tata.csv')
ytest <- read.csv('./y_test_tata.csv')
ytrain <- read.csv('./y_train_tata.csv')
xtrain <- read.csv('./x_train_tata.csv')
xtest <- xtest[-1]
ytest <- ytest[-1]
xtrain <- xtrain[-1]
ytrain <- ytrain[-1]
train <- cbind(xtrain, ytrain)
obj <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control)
view(train)
View(train)
is.na(train)
any(is.na(train))
which(is.na(train))
15793//13
15793/13
16271/13
train[15793]
apply(is.na(train), 2, which)
library(zoo)
install.packages(zoo)
install.packages('zoo')
library(zoo)
train <- na.approx(train)
is.na(train)
apply(is.na(train), 2, which)
obj <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control)
pred <- predict(obj, xtest)
View(pred)
View(train)
control = list(num.labels = 2, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = "MIN', name = "STEEL"")
control = list(num.labels = 2, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = "MIN', name = "STEEL")
control = list(num.labels = 2, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = "MIN", name = "STEEL")
obj1 <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control)
pred1 <- predict(obj1, testx)
pred1 <- predict(obj1, xtest)
pred1
y_test - pred1
ytest - pred1
library(ggplot2)
mean((y_test - pred1)**2)
mean((ytest - pred1)**2)
mean((ytest - pred1)^2)
mean((ytest$Close - pred1)^2)
save.image("~/develop/andy/Wavelet+ANFIS/anfis811.RData")
mse <- mean((ytest$Close - pred1)^2)
save.image("~/develop/andy/Wavelet+ANFIS/anfis811.RData")
control3 = list(num.labels = 3, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = "MIN", name = "STEEL")
obj3 <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control3)
pred3 = predict(obj3, xtest)
pred3
mse3 <- mean((ytest$close - pred3)**2)
mse3
mse3 <- mean((ytest$Close - pred3)**2)
mse3
control4 = list(num.labels = 4, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = "MIN", name = "STEEL")
obj4 <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control4)
pred4 <- predict(obj4, xtest)
mse4 <- mean((ytest$Close - pred4)**2)
pred4
save.image("~/develop/andy/Wavelet+ANFIS/811progress_reproduction.RData")
load("~/develop/andy/Wavelet+ANFIS/810attempts.RData")
control2 = list(num.labels = 2, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = "MIN", name = "STEEL")
obj2 <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control2)
predapple <- predict(obj2, test_x)
View(predapple)
View(predapple)
x <- rbind(train_x, test_x)
y <- rbind(train_y, test_y)
View(y)
y <- c(train_y, test_y)
len(y)
size(y)
length(y)
length(y)*9//10
length(y)*0.9
test_y_1 = y[:4619]
test_y_1 = y[1:4619]
test_y = y[1:4619]
test_y = y[4620:]
test_y = y[4620:5119]
train_y = y[1:4619]
train_x = x[1:4619]
train_x = x[,1:4619]
train_x = x[:,1:4619]
train_x = x[1:4619,]
test_x = x[4620:5119,]
train = cbind(train_x, train_y)
obj2 <- frbs.learn(data.train=train, range.data=RD, method.type=c('ANFIS'), control= control2)
pred2 <- predict(obj2, test_x)
View(pred2)
control2
save.image("~/develop/andy/Wavelet+ANFIS/811.RData")
