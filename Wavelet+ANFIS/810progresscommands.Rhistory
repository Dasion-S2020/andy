View(data)
pred
NL = NL[1:12]
Control-NL <- list(num.labels = NL, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = 'MIN', name = 'APPLE')
ControlNL <- list(num.labels = NL, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = 'MIN', name = 'APPLE')
objectNL <- frbs.learn(data.train, RD, c('ANFIS'), controlNL)
library(frbs)
objectNL <- frbs.learn(data.train, RD, c('ANFIS'), controlNL)
objectNL <- frbs.learn(train, RD, c('ANFIS'), controlNL)
ControlNL
objectNL <- frbs.learn(train, RD, 'ANFIS', controlNL)
objectNL <- frbs.learn(train, RD, "ANFIS", controlNL)
objectNL <- frbs.learn(train, RD, "ANFIS", ControlNL)
warnings()
ControlNL <- list(num.labels = 2, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = 'MIN', name = 'APPLE')
objectNL <- frbs.learn(train, RD, "ANFIS", controlNL)
objectNL <- frbs.learn(train, RD, "ANFIS", ControlNL)
pred_new <- predict(objectNL, test_x)
View(train_x)
ControlNL <- list(num.labels = 5, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = 'MIN', name = 'APPLE')
objectNL <- frbs.learn(train, RD, "ANFIS", ControlNL)
objectNL <- frbs.learn(train, RD, "ANFIS", ControlNL)
pred_new <- predict(objectNL, test_x)
View(pred_new)
ControlNL <- list(num.labels = 10, max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = 'MIN', name = 'APPLE')
objectNL <- frbs.learn(train, RD, "ANFIS", ControlNL)
ControlZadeh <- list(max.iter = 10, step.size = 0.01, type.tnorm = 4, type.snorm = 1, type.implication.func = 'ZADEH', name = 'APPLE')
objectZadeh <- frbs.learn(train, RD, "ANFIS", ControlZadeh)
predZadeh <- predict(objectZadeh, test_x)
View(predZadeh)
View(pred)
View(test_x)
View(pred)
View(test_x)
test_x[test_x < 0] <- 0
predZadeh <- predict(objectZadeh, test_x)
predZadeh
View(sp)
pred_test <- predict(obj, test_x)
View(test_x)
pred_test
View(pred)
test_x = read_csv('x_test.csv')
test_x = read.csv('x_test.csv')
setwd("~/develop/andy/Wavelet+ANFIS")
test_x = read.csv('x_test.csv')
train_x = read.csv('x_train.csv')
test_y =read.csv('y_test.csv')
train_y = read.csv('y_train.csv')
train <- cbind(train_x, train_y)
object_new <- frbs.learn(train, RD, "ANFIS", Control)
test_x = test_x[2:]
test_x = test_x[,-1]
train_x = train_x[,-1]
test_y = test_y[,-1]
train_y = train_y[,-1]
train <- cbind(train_x, train_y)
object_new <- frbs.learn(train, RD, "ANFIS", Control)
pred_n <- predict(object_new, test_x)
object_new
objectDefault <- frbs.learn(train, RD, "ANFIS")
predDefault <- predict(objectDefault, test_x)
View(test_x)
View(predDefault)
save.image("~/develop/andy/Wavelet+ANFIS/810attempts.RData")
savehistory("~/develop/andy/Wavelet+ANFIS/810progresscommands.Rhistory")
